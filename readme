Миокович Елизавета
		The Lord of the Rings

Игровая модель содержит 2 стороны (светлая и темная) и некоторые типы войнов, например, орки, гоблины, эльфы ...
Для каждой стороны существует конкретный набор юнитов.
Войны имеют особенные характеристики (здоровье и  сила у  боевых юнитов).

Реализован класс User, в котором для пользователя существуют функции: создания имени, выбор стороны и армий.
В начале игры  выбирается  сторона и она  сразу  привязывается к созданному юзеру,  цепляя  и  все  армии  и подразделения  сразу.

В классе ArmyFactory  создаются  сами  армии вне  зависимости  от строны, к армиям цепляются  юниты (отряды, например, лучники).  
И уже класс ArmyBuilder  требуется именно для построения этих самых армий в предыдущем классе (просто добавление в вектор юнита).      
(Использован паттерн builder, т.к. армия - сложный обьект, состоящий из других обьектов)
  
В классе Army создана map с типом и информацией для армий, что важно так как во время игры нужно будет обращаться к конкретным юнитам
конкретных армий. Создан класс юнита, от которого идут все остальные классы отрядов, у каждого такого отряда есть функция вывода информации.

Использован паттерн Command - преобразовывает действия в отдельный объект-команду(позволяет передавать эти действия другим функциям и 
объектам в качестве параметра, что удобно в случае этой игры) Основной движок игры реализован с помощью паттерна Одиночка.

Игра происходит в течении 10 ходов. Включает в себя последовательную выбор армии для атаки; сражение происходит автоматически, программа 
выбирает победителя по характеристикам. Для этого заведен класс Game с функциями: начало игры, выбор стороны, создание армий для юзеров 
и демонстрация армии, а также 11 раундов игры по правилам(показываются в начале игры один раз). Реализован класс User, в котором для 
пользователя существуют функции: создания имени, выбор стороны и армий.

Отказ от паттерна Visitor
Позволяет, не изменяя классы объектов, добавлять в них новые операции.
В данной игре такой функционал не требуется, т.к. все методы уже заранее определены и в ходе игры новых возникнуть не может.
Не использован декоратор так, как ни один класс не расширяет свой функционал 
Adapter - нет необходимости во взаимодействии несовместимых классов.


Запуск юнит тестов:
mkdir build
cd build
cmake (путь к CMakeList.txt)
make
./bin/test_
